<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="h2DataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:org/calllight/es/examples/learning/repository/mapper/*Mapper.xml
				</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="org.calllight.es.examples.learning.repository.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="h2DataSource" />
	</bean>


<!-- 
<bean id="h2DataSource" class="org.h2.jdbcx.JdbcConnectionPool"
		destroy-method="dispose">
		<constructor-arg>
			<bean class="org.h2.jdbcx.JdbcDataSource">
				<property name="URL" value="${dha.url}" />
				<property name="user" value="${dha.username}" />
				<property name="password" value="${dha.dbPassword}" />
			</bean>
		</constructor-arg>
	</bean>
 -->
	
	<bean id="h2DataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dha.driver}" />
		<property name="url" value="${dha.url}" />
		<property name="username" value="${dha.username}" />
		<property name="password" value="${dha.dbPassword}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="10" />
		<!-- 最大活动连接数量 -->
		<property name="maxActive" value="10" />
		<!-- 最大空闲连接数量 -->
		<property name="maxIdle" value="10" />
		<!-- 最小空闲连接数量 -->
		<property name="minIdle" value="5" />
		<!-- 是否自动提交 -->
		<property name="defaultAutoCommit" value="true" />
		<!-- 空闲连接被回收时间，回收空闲连接至minIdle指定数量，单位毫秒 -->
		
	</bean>
	
	<!-- provides a H2 console to look into the db if necessary -->
	<jdbc:initialize-database data-source="h2DataSource">
		<jdbc:script location="classpath:META-INF/db/init_table.sql" />
	</jdbc:initialize-database>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="h2DataSource" />
	</bean>

</beans>